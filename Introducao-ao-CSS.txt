
        Introcução ao CSS

// --- O que é CSS --- // 

CSS - Cascade Style Sheet

Versão atual - CSS3

É a W3C que desenvolve e mantém as especificações da linguagem.

O objetivo do CSS é estilização da página, estilizando o HTML e deixando nosso site mais atrativo.


// --- Primeiros passos --- // 

Para colorir o texto em vermelho:

<h1 style="color: red;">Hello World!</h1>

Porém, deste modo, caso haja vários elementos <h1></h1>, temos dois problemas, 
1) Repetição: ter que inserir as cores em cada um dos elementos
2) Trabalho braçal: caso um dia eu quiser mudar as cores desses elementos, terei que fazê-lo manualmente

Então, para solucionar esse problema, utilizamos a tag <style></style> dentro de <head></head>, onde aplicaremos as estilizações CSS selecionando qual elemento iremos estilizar:

<style>
    h1 {
         color: red;
        font-size: 20px;
    }
</style>
- lembrando de sempre utilizar ";" caso haja mais de uma propriedade, se não o código dará errp


// --- Cores --- //

Cores padrões são um tanto quanto robóticas, engessadas, muito comuns e como já dito, padronizadas.

Assim, iremos definir na unha a cor exata que queremos utilizar com os valores do rgb(x, x, x), onde temos 3 parâmetros em valores decimais:

    background-color: rgb(0, 0, 255); // 0 = mínimo e 255 = máximo (potência da cor)


Também temos o rgba(x, x, x, x), onde o 4° parâmetro significa a transparência da cor gerada pelos 3 primeiros parâmetros:

    background-color: rgba(0, 0, 255, 50%); // porcentagem de transparência


Mas, também podemos declarar as cores por meio da cerquilha (o jogo da velha) "#", as mais comumente utilizada na web, definida por valores hexadecimais:

{   0 1 2 3 4 5 6 7 8 9 a b c d e f   }

- 0 decimal = 0 hexadecimal        // 0% de uma cor
- 255 decimal = f hexadecimal      // 100% de uma cor


Podemos declarar as # de 2 formas:
1) uma casa - representando um parâmetro
2) duas casas - representando um parâmetro

Ex R: 

    background-color: #f00;
    background-color: #ff0000;

Ex G: 

    background-color: #0f0;
    background-color: #00ff00;

Ex B: 

    background-color: #00f;
    background-color: #0000ff;


// --- Hierarquias --- //

O CSS funciona a base de hierarquias, uma cascata de regras que obedecem propriedades.

Assim, o CSS leva em consideração o que foi declarado por último ou por níveis de hierarquia.

Ex 1: 

        div {
            width: 100px;
            height: 100px;
            background-color: red;
            background-color: blue; // a <div> será dessa cor
        }

Ex 2: 

    <style>
        div {
            width: 100px;
            height: 100px;
            background-color: red;
            background-color: blue;
        }
    </style>
    </head>

    <body>
        <div style="background-color: yellow;"></div> // a <div> será dessa cor
    </body>

Ex 3: 

    <style>
        div {
            width: 100px;
            height: 100px;
            background-color: red;
            background-color: blue !important; // a <div> será dessa cor
        }
    </style>
    </head>

    <body>
        <div style="background-color: yellow;"></div>
    </body>

Ex 4: 

    <style>
        div {
            width: 100px;
            height: 100px;
            background-color: red;
            background-color: blue !important; 
        }
    </style>
    </head>

    <body>
        <div style="background-color: yellow !important;"></div> // a <div> será dessa cor
    </body>

Há também a hierarquia por parte de classes e id, mas que não foi abordado nesta aula.


// --- Fontes --- //

Cada navegador tem um padrão de fonte onde é adotada caso uma outra fonte não seja definida.

Existem Fontes e Tipos de fontes, não confunda!

    h1 {
        font-family: sans-serif;
        font-style: italic;
        font-size: 50px;
        font-weight: 1000;
    }
- serifa: são os acabamentos da fonte, e com essa fonte nosso <h1> não terá esses acabamentos 
- font-weight: o peso/grossura da fonte


Também podemos inserir um fonte externa para o nosso projeto, baixando-a, incluindo o arquivo em nosso projeto, e a fonte em nosso documento HTML:

    @font-face {
        font-family: Roose-Sally;
        src: url("./Roose-Sally.otf");
    }
- font-family: o nome que damos à essa fonte para ser utilizada
- src: qual arquivo ela está


Para não ter que declarar a fonte em cada elemento no <style>, declara-se diretamente na tag <body>, para, caso queira, todo o conteúdo da página ser estilizada por essa fonte.

    body {
        font-family: Roose-Sally;
    }


// --- Estilização de texto --- // 

Além de estilização decorativa, temos também a estilização de formatação de texto.

Ajustes:

    p {
        text-align: left;   // ajusta o texto à esquerda
        text-align: right;  // ajusta o texto à direta
        text-align: center; // ajusta o texto ao centro
    }

Modo:

    p {
        text-transform: lowercase;  // texto em caixa baixa
        text-transform: uppercase;  // texto em caixa alta
        text-transform: capitalize; // todas a letras começam em maiúsculo
    }

Sublinhado:

    p {
        text-decoration: underline;     // sublinhado embaixo
        text-decoration: overline;      // sublinhado em cima
        text-decoration: line-through;  // riscado
    }


E para espaçamentos entre o texto, temos alguns atributos.

Influenciar o espaçamento de uma LINHA da outra:

    p {
        line-height: 30px;
    }


Influenciar o espaçamento de uma PALAVRA da outra:

    p {
        word-spacing: 20px;
    }


Influenciar o espaçamento de uma LETRA da outra:

    p {
        letter-spacing: 10px;
    }


// --- Bordas --- //

Temos algumas formas de criar uma borda em nosso elemento.

Criar borda - verbosa:

    border-width: 5px;
    border-style: dashed;
    border-color: turquoise;


Criar borda - simples:

    border: 5px dashed turquoise;


/ Arredondamento / 

Assim como inserção de bordas, podemos arredondá-las.

Arredondar - verboso:

    border-top-left-radius: 30px; 
    border-top-right-radius: 30px; 
    border-bottom-left-radius: 30px; 
    border-bottom-right-radius: 30px; 


Arredondar - simples:

  border-radius: 30px 30px 30px 30px; // sentido horário 


Arredondar em todos os cantos:

  border-radius: 100px; // círculo


// --- Console do navegador --- //

Hoje em dia os navegadores costumam ter, em sua versão mais recente, uma ferramenta incrível, o Console do Navegador.

Ctrl + Shift + I

- Elements: estrutura HTML, estilização CSS, 
- Console: saídas de JavaScript
- Source: os arquivos da aplicação/página
- Network: as requisições que a página realiza 
- Performance: a performance 

O Console pode ser muito útil também para realizar testes em tempo real, apenas modificando o código diretamente no navegador - na aba de "Elements"

